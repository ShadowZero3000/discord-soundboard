# I would like to add https://github.com/semantic-release/semantic-release to the flow
# Ideally we'd have semantic-release do the tagging (which will trigger another job)
# So on push to master, run semantic-release, on tag push to prod
# With a prepare plugin: https://github.com/semantic-release/semantic-release/blob/caribou/docs/usage/plugins.md#prepare-plugin
# we can have it automatically update the version file
# But that's going to be a push to the master branch, so how to not repeat ourselves
# will need some thought
# Can do with: git commit -m "updated README [CI SKIP]"
pipeline:
  restore-cache:
    image: drillster/drone-volume-cache

    mount:
      - /drone/docker
    restore: true
    volumes:
      - /tmp/cache:/cache
    when:
      event: [push, tag]

  # Dev build. Occurs on non-master/release branches
  docker-build:
    image: plugins/docker

    # Seems to be required to push to the registry on the same host
    custom_dns: [ 192.168.5.1 ]
    debug: true
    network_mode: host
    registry: registry.codethat.rocks:5000
    repo: registry.codethat.rocks:5000/discord-soundboard/soundboard
    storage_path: /drone/docker
    tags: dev-${CI_BUILD_NUMBER}
    when:
      event: push
      branch:
        exclude: [master, release/*]

  # Semantic release - Updates versions, changelogs, etc..., and pushes another commit with [skip ci]
  semver-update:
    image: registry.codethat.rocks:5000/discord-soundboard/semver
    commands:
      - if echo "$${DRONE_COMMIT_MESSAGE}" | grep "\[skip semver\]"; then exit 0; fi
      - mkdir ~/.ssh -p
      - echo "$${GITHUB_SSH_KEY}" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - chmod +x ./update_version
      - printf "StrictHostKeyChecking no\nUserKnownHostsFile /dev/null\nHost github.com\nUser ShadowZero3000" > ~/.ssh/config
      - npx semantic-release --debug
    secrets: [ github_ssh_key, github_token ]
    when:
      event: push
      branch:
        include: [master, release/*]

  # Prod build - Happens after Semantic release updates changelogs etc...
  docker-build-production:
    image: plugins/docker

    # Seems to be required to push to the registry on the same host
    custom_dns: [ 192.168.5.1 ]
    debug: true
    network_mode: host
    registry: registry.codethat.rocks:5000
    repo: registry.codethat.rocks:5000/discord-soundboard/soundboard
    storage_path: /drone/docker
    tags: "${DRONE_TAG}"
    when:
      event: tag
      branch:
        include: [master, release/*]

  rebuild-cache:
    image: drillster/drone-volume-cache

    mount:
      - /drone/docker
    rebuild: true
    volumes:
      - /tmp/cache:/cache
    when:
      event: push

  # Dev deploy. Occurs on non-master/release branches
  rancher-dev:
    image: peloton/drone-rancher

    access_key: superaccesskey
    confirm: true
    docker_image: "registry.codethat.rocks:5000/discord-soundboard/soundboard:dev-${CI_BUILD_NUMBER}"
    secret_key: supersecretkey
    service: dev-discord/discordbot
    start_first: false
    timeout: 300
    url: http://rancher.codethat.rocks:8080
    when:
      event: push
      branch:
        exclude: [master, release/*]

  # Prod deploy, Occurs on tags
  rancher-production:
    image: peloton/drone-rancher

    access_key: superaccesskey
    confirm: true
    docker_image: "registry.codethat.rocks:5000/discord-soundboard/soundboard:${DRONE_TAG}"
    secret_key: supersecretkey
    service: discordbot/discordbot
    start_first: false
    timeout: 300
    url: http://rancher.codethat.rocks:8080
    when:
      event: tag
      branch:
        include: [master, release/*]
