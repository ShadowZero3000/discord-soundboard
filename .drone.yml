---
kind: pipeline
type: docker
name: soundboard
# I would like to add https://github.com/semantic-release/semantic-release to the flow
# Ideally we'd have semantic-release do the tagging (which will trigger another job)
# So on push to master, run semantic-release, on tag push to prod
# With a prepare plugin: https://github.com/semantic-release/semantic-release/blob/caribou/docs/usage/plugins.md#prepare-plugin
# we can have it automatically update the version file
# But that's going to be a push to the master branch, so how to not repeat ourselves
# will need some thought
# Can do with: git commit -m "updated README [CI SKIP]"

volumes:
  - name: cache
    host:
      path: /tmp/cache
steps:
  # Caching no longer necessary for docker, since no DIND now.
  # However, it'll help with node modules eventually, so turn it back on later
  # Note that the mount path will need to change
  # - name: restore-cache
  #   image: drillster/drone-volume-cache
  #   settings:
  #     mount:
  #       - /drone/docker
  #     restore: true
  #   volumes:
  #     - name: cache
  #       path: /cache
  #   when:
  #     event: [push, tag]

  # Unit tests
  - name: unit-test
    image: registry.codethat.rocks/soundboard/base
    commands:
      - cp /node/node_modules . -r
      - npm install
      - npm test
    when:
      event: push
      branch:
        exclude: [master, release/*]
  # Dev build. Occurs on non-master/release branches
  - name: docker-build
    image: plugins/docker

    # Seems to be required to push to the registry on the same host
    custom_dns: [ 192.168.10.1 ]
    debug: true
    network_mode: host
    settings:
      registry: registry.codethat.rocks
      username: drone
      password:
        from_secret: REGISTRY_PASSWORD
      repo: registry.codethat.rocks/soundboard/soundboard
      tags:
        - dev-${CI_BUILD_NUMBER}
    storage_path: /drone/docker
    when:
      event:
        - push
      branch:
        exclude:
          - master
          - release/*

  # Semantic release - Updates versions, changelogs, etc..., and pushes another commit with [skip ci]
  - name: semver-update
    image: registry.codethat.rocks/soundboard/semver
    environment:
      GITHUB_SSH_KEY:
        from_secret: github_ssh_key
      GITHUB_TOKEN:
        from_secret: github_token
    commands:
      - if echo "$${DRONE_COMMIT_MESSAGE}" | grep "\[skip semver\]"; then exit 0; fi
      - mkdir ~/.ssh -p
      - echo "$${GITHUB_SSH_KEY}" > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - chmod +x ./update_version
      - printf "StrictHostKeyChecking no\nUserKnownHostsFile /dev/null\nHost github.com\nUser ShadowZero3000" > ~/.ssh/config
      - npx semantic-release --debug
    when:
      event:
        - push
      branch:
        - master
        - release/*

  # Prod build - Happens after Semantic release updates changelogs etc...
  - name: docker-build-production
    image: plugins/docker

    # Seems to be required to push to the registry on the same host
    custom_dns: [ 192.168.10.1 ]
    debug: true
    network_mode: host
    settings:
      registry: registry.codethat.rocks
      username: drone
      password:
        from_secret: REGISTRY_PASSWORD
      repo: registry.codethat.rocks/soundboard/soundboard
      auto_tag: true
      tags:
        - "${DRONE_TAG}"
    storage_path: /drone/docker
    when:
      event:
        - tag
  # See above note about caching
  # - name: rebuild-cache
  #   image: drillster/drone-volume-cache
  #   settings:
  #     mount:
  #       - /drone/docker
  #     rebuild: true
  #   volumes:
  #     - name: cache
  #       path: /cache
  #   when:
  #     event: push

  # Dev deploy. Occurs on non-master/release branches
  - name: kube-dev
    image: quay.io/honestbee/drone-kubernetes
    settings:
      kubernetes_server: https://kubernetes.default.svc
      kubernetes_token:
        from_secret: PIPELINE_TOKEN
      kubernetes_cert:
        from_secret: PIPELINE_CA_CERT
      namespace: default
      deployment: dev-soundboard
      repo: registry.codethat.rocks/soundboard/soundboard
      container: soundboard
      tag: dev-${CI_BUILD_NUMBER}
    when:
      event: push
      branch:
        exclude: [master, release/*]

  # Prod deploy, Occurs on tags
  - name: kube-prod
    image: quay.io/honestbee/drone-kubernetes
    settings:
      kubernetes_server: https://kubernetes.default.svc
      kubernetes_token:
        from_secret: PIPELINE_TOKEN
      kubernetes_cert:
        from_secret: PIPELINE_CA_CERT
      namespace: default
      deployment: prod-soundboard
      repo: registry.codethat.rocks/soundboard/soundboard
      container: soundboard
      tag: ${DRONE_TAG}
    when:
      event: tag
